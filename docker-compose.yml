version: '3.9'

services:
  web:
    build:
      context: .
    container_name: web
    restart: always
    volumes:
      - .:/app
      - static_files:/app/staticfiles
      - static:/app/static
      - media:/app/media
      - /tmp/app/mysqld:/run/mysqld
    env_file:
      - .env
    depends_on:
      - mysql

  chat:
    build: ./frontend
    container_name: chat

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:rw
      - static_files:/home/app/staticfiles/
      - static:/home/app/static/
      - media:/home/app/media/
      - .:/app
    depends_on:
      - web
    ports:
      - 1080:80
      - 1443:443
    env_file:
      - .env


  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - /tmp/app/mysqld:/var/run/mysqld
      - ./erp_mysql:/var/lib/mysql
    ports:
      - 3307:3306


  redis:
    container_name: erp_redis
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    depends_on:
      - mysql
      - web


  celery-worker:
    container_name: erp_celery_worker
    restart: always
    build:
      context: .
    command: celery -A config worker -l info
    volumes:
      - .:/app
      - /tmp/app/mysqld:/run/mysqld
    depends_on:
      - web
      - redis
      - mysql


  celery-beat:
    container_name: erp_celery_beat
    restart: always
    build:
      context: .
    command: celery -A config beat -l info
    volumes:
      - .:/app
      - /tmp/app/mysqld:/run/mysqld
    depends_on:
      - web
      - redis
      - celery-worker
      - mysql


volumes:
  static_files:
  static:
  media:
  redis_data: