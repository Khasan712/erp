version: '3.9'

services:
  app:
    build:
      context: .
    container_name: app
    restart: always
    env_file:
      - .env
    depends_on:
      - mysql


  nginx:
    build:
      context: ./docker/proxy
    container_name: nginx
    restart: always
    depends_on:
      - app
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - certbot-web:/var/www
      - proxy-dhparams:/var/nginx
      - certbot-certs:/etc/letsencrypt
    env_file:
      - .env


  certbot:
    build:
      context: ./docker/certbot
    container_name: certbot
    command: echo "Skipping ..."
    env_file:
      - .env
    volumes:
      - certbot-web:/var/www
      - certbot-certs:/etc/letsencrypt
    depends_on:
      - nginx


  mysql:
    image: mysql:latest
    build:
      context: .
    container_name: erp_mysql
    env_file:
      - .env
    volumes:
      - /tmp/erp/mysqld:/var/run/mysqld
      - ./erp_mysql:/var/lib/mysql


  redis:
    container_name: erp_redis
    image: redis:alpine
    ports:
      - "6379:6379"
    depends_on:
      - mysql
      - app


  celery-worker:
    container_name: erp_celery_worker
    restart: always
    build:
      context: .
    command: celery -A ERP_MASTER worker -l info
    volumes:
      - .:/erp
    depends_on:
      - app
      - redis
      - mysql


  celery-beat:
    container_name: erp_celery_beat
    restart: always
    build:
      context: .
    command: celery -A ERP_MASTER beat -l info
    volumes:
      - .:/erp
    depends_on:
      - app
      - redis
      - celery-worker
      - mysql


volumes:
  certbot-web:
  proxy-dhparams:
  certbot-certs:
